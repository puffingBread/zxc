<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-reverse-engineering
        SYSTEM "http://hibernate.sourceforge.net/hibernate-reverse-engineering-3.0.dtd" >

<hibernate-reverse-engineering>

    <type-mapping>
        <sql-type jdbc-type="BIGINT" hibernate-type="java.lang.Long"/>
        <sql-type jdbc-type="TINYINT" length="1" hibernate-type="boolean"/>
        <sql-type jdbc-type="SMALLINT" hibernate-type="java.lang.Integer"/>
    </type-mapping>

    <!-- BIN$ is recycle bin tables in Oracle -->
    <table-filter match-name="id_holder" exclude="true"/>
    <table-filter match-name="DATABASECHANGELOG" exclude="true"/>
    <table-filter match-name="DATABASECHANGELOGLOCK" exclude="true"/>

    <table name="retailer">
        <primary-key>
            <generator class="org.hibernate.id.enhanced.TableGenerator">
                <param name="table_name">id_holder</param>
                <param name="value_column_name">id_counter</param>
                <param name="segment_column_name">id_name</param>
                <param name="segment_value">RetailerId</param>
            </generator>
            <key-column name="id"/>
        </primary-key>
        <!-- table allows you to override/define how reverse engineering
         is done for a specific table
       parameters = {@Parameter(name = "table_name", value = "id_holder"),
                    @Parameter(name = "value_column_name", value = "id_counter"),
                    @Parameter(name = "segment_column_name", value = "id_name"),
                    @Parameter(name = "segment_value", value = "DeviceId"),
                    @Parameter(name = "increment_size", value = "1"),
                    @Parameter(name = "optimizer", value = "pooled-lo") })
        <column name="NAME" property="orderName" type="string" />

        <foreign-key constraint-name="ORDER_CUST">
            <many-to-one property="customer"/>
            <set property="orders"/>
        </foreign-key>

        <foreign-key constraint-name="ADDRESS_PERSON">
            <one-to-one exclude="false"/>
            <inverse-one-to-one exclude="true"/>
        </foreign-key>
        -->
    </table>


</hibernate-reverse-engineering>